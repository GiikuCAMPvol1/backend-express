import { AlgorithmProblems } from "./types/algorithmProblems";

export const algorithm_problems: AlgorithmProblems = {
  easy: [
    "フィボナッチ数列の計算: ユーザーから入力された数値までのフィボナッチ数列を計算し、結果を表示するプログラムを作成してください。",
    "素数の判定: ユーザーから入力された数値が素数かどうかを判定するプログラムを作成してください。素数であれば「素数です」と表示し、そうでなければ「素数ではありません」と表示してください。",
    "階乗の計算: ユーザーから入力された数値の階乗を計算し、結果を表示するプログラムを作成してください。",
    "二分探索: ソートされた整数のリストが与えられた場合、特定の値を探索するための二分探索アルゴリズムを実装してください。",
  ],
  normal: [
    "バブルソート: 整数のリストが与えられた場合、バブルソートアルゴリズムを使用してリストを昇順に並び替えてください。",
    "辞書の操作: 辞書とキーが与えられた場合、そのキーに対応する値を取得するプログラムを作成してください。",
    "文字列の反転: ユーザーから入力された文字列を反転させて表示するプログラムを作成してください。",
    "最大公約数と最小公倍数: 2つの整数が与えられた場合、最大公約数と最小公倍数を計算するプログラムを作成してください。",
    "ファイル操作: テキストファイルが与えられた場合、そのファイル内の特定の単語の数をカウントするプログラムを作成してください。",
    "クイックソート: 整数のリストが与えられた場合、クイックソートアルゴリズムを使用してリストを昇順に並び替えてください。",
    "連結リストの逆順: 与えられた連結リストを逆順に並び替えるプログラムを実装してください。",
  ],
  hard: [
    "バイナリツリーの深さ: 与えられたバイナリツリーの深さ（最長のパスの長さ）を計算するプログラムを作成してください。",
    "文字列の頻度カウント: 与えられた文字列内の各文字の出現回数をカウントするプログラムを実装してください。",
    "二進数変換: 与えられた整数を二進数に変換するプログラムを作成してください。",
    "最長増加部分列: 与えられた整数のリストにおける最長増加部分列（要素が昇順になっている最長の部分リスト）の長さを計算するプログラムを実装してください。",
    "行列の転置: 与えられた行列を転置するプログラムを作成してください。",
    "最短経路探索: 与えられたグラフにおいて、2つのノード間の最短経路を見つけるためのダイクストラのアルゴリズムを実装してください。",
    "スタックの実装: スタック（LIFO：Last-In, First-Out）の基本的な操作（プッシュ、ポップ、ピーク）を実装してください。",
    "キューの実装: キュー（FIFO：First-In, First-Out）の基本的な操作（エンキュー、デキュー、ピーク）を実装してください。",
    "二分木の探索: 与えられた二分木において、指定された値を探索するための二分探索アルゴリズムを実装してください。",
  ],
};
